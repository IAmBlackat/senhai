[{"D:\\React\\Projects\\senhai\\src\\index.js":"1","D:\\React\\Projects\\senhai\\src\\App.js":"2","D:\\React\\Projects\\senhai\\src\\reportWebVitals.js":"3","D:\\React\\Projects\\senhai\\src\\redux\\store.js":"4","D:\\React\\Projects\\senhai\\src\\redux\\reducer.js":"5","D:\\React\\Projects\\senhai\\src\\views\\Details.js":"6","D:\\React\\Projects\\senhai\\src\\views\\Header.js":"7","D:\\React\\Projects\\senhai\\src\\views\\Container.js":"8","D:\\React\\Projects\\senhai\\src\\views\\Watch.js":"9","D:\\React\\Projects\\senhai\\src\\redux\\action.js":"10","D:\\React\\Projects\\senhai\\src\\components\\Loading.js":"11","D:\\React\\Projects\\senhai\\src\\components\\Error.js":"12","D:\\React\\Projects\\senhai\\src\\components\\NoneFound.js":"13","D:\\React\\Projects\\senhai\\src\\views\\Home.js":"14","D:\\React\\Projects\\senhai\\src\\components\\Featured.js":"15","D:\\React\\Projects\\senhai\\src\\manga\\MangadexApi.js":"16","D:\\React\\Projects\\senhai\\src\\manga\\Read.js":"17","D:\\React\\Projects\\senhai\\src\\components\\Schedule.js":"18","D:\\React\\Projects\\senhai\\src\\components\\SchedList.js":"19","D:\\React\\Projects\\senhai\\src\\components\\OpVideo.js":"20","D:\\React\\Projects\\senhai\\src\\components\\GetTime.js":"21","D:\\React\\Projects\\senhai\\src\\views\\desktop\\OngoingCarousel.js":"22","D:\\React\\Projects\\senhai\\src\\views\\mobile\\OngoingGrid.js":"23","D:\\React\\Projects\\senhai\\src\\views\\mobile\\UpcomingSeason.js":"24","D:\\React\\Projects\\senhai\\src\\views\\desktop\\Upcoming.js":"25","D:\\React\\Projects\\senhai\\src\\views\\desktop\\UpcomingSkeleton.js":"26","D:\\React\\Projects\\senhai\\src\\user\\Register.js":"27","D:\\React\\Projects\\senhai\\src\\user\\Login.js":"28","D:\\React\\Projects\\senhai\\src\\user\\Profile.js":"29","D:\\React\\Projects\\senhai\\src\\user\\Logout.js":"30","D:\\React\\Projects\\senhai\\src\\user\\instructions\\EmptyBookmark.js":"31","D:\\React\\Projects\\senhai\\src\\user\\mobile\\BookmarkM.js":"32","D:\\React\\Projects\\senhai\\src\\user\\Report.js":"33","D:\\React\\Projects\\senhai\\src\\views\\Download.js":"34"},{"size":736,"mtime":1614254238823,"results":"35","hashOfConfig":"36"},{"size":1883,"mtime":1612599281467,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":126,"mtime":1609680734000,"results":"39","hashOfConfig":"36"},{"size":1011,"mtime":1610173023687,"results":"40","hashOfConfig":"36"},{"size":6229,"mtime":1613015132772,"results":"41","hashOfConfig":"36"},{"size":9544,"mtime":1614254728531,"results":"42","hashOfConfig":"36"},{"size":7030,"mtime":1613049880687,"results":"43","hashOfConfig":"36"},{"size":9909,"mtime":1613992080858,"results":"44","hashOfConfig":"36"},{"size":785,"mtime":1610172934225,"results":"45","hashOfConfig":"36"},{"size":440,"mtime":1613120917252,"results":"46","hashOfConfig":"36"},{"size":1166,"mtime":1610069876003,"results":"47","hashOfConfig":"36"},{"size":1006,"mtime":1610069880224,"results":"48","hashOfConfig":"36"},{"size":7244,"mtime":1614254469955,"results":"49","hashOfConfig":"36"},{"size":7410,"mtime":1611667145580,"results":"50","hashOfConfig":"36"},{"size":1513,"mtime":1610593935803,"results":"51","hashOfConfig":"36"},{"size":786,"mtime":1610509807983,"results":"52","hashOfConfig":"36"},{"size":5272,"mtime":1611306191602,"results":"53","hashOfConfig":"36"},{"size":1291,"mtime":1611546451983,"results":"54","hashOfConfig":"36"},{"size":551,"mtime":1611567355862,"results":"55","hashOfConfig":"36"},{"size":456,"mtime":1611546452924,"results":"56","hashOfConfig":"36"},{"size":3212,"mtime":1613049417507,"results":"57","hashOfConfig":"36"},{"size":2296,"mtime":1611548269227,"results":"58","hashOfConfig":"36"},{"size":2984,"mtime":1611548467048,"results":"59","hashOfConfig":"36"},{"size":8220,"mtime":1611667502970,"results":"60","hashOfConfig":"36"},{"size":1960,"mtime":1611667121446,"results":"61","hashOfConfig":"36"},{"size":5557,"mtime":1612784087152,"results":"62","hashOfConfig":"36"},{"size":5936,"mtime":1613048118928,"results":"63","hashOfConfig":"36"},{"size":9702,"mtime":1613049477010,"results":"64","hashOfConfig":"36"},{"size":1497,"mtime":1612784061665,"results":"65","hashOfConfig":"36"},{"size":726,"mtime":1612745298579,"results":"66","hashOfConfig":"36"},{"size":2837,"mtime":1612877744686,"results":"67","hashOfConfig":"36"},{"size":5465,"mtime":1612784088625,"results":"68","hashOfConfig":"36"},{"size":2593,"mtime":1614254826068,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11mxf0q",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\Projects\\senhai\\src\\index.js",[],"D:\\React\\Projects\\senhai\\src\\App.js",[],["154","155"],"D:\\React\\Projects\\senhai\\src\\reportWebVitals.js",[],"D:\\React\\Projects\\senhai\\src\\redux\\store.js",[],"D:\\React\\Projects\\senhai\\src\\redux\\reducer.js",[],"D:\\React\\Projects\\senhai\\src\\views\\Details.js",["156"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Backdrop, Button, CircularProgress, Grid, makeStyles, Paper, Snackbar, Typography } from '@material-ui/core'\nimport { watchEpisode } from '../redux/action'\nimport Loading from '../components/Loading'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { Alert } from '@material-ui/lab'\n\nconst useStyles = makeStyles( (theme) => ({\n    root: {\n        // height: '91.8vh'\n        height: 'auto'\n    },\n    title: {\n        padding: '30px'\n    },\n    img: {\n        height: 'auto',\n        maxWidth: '50vw',\n        [theme.breakpoints.up('sm')]: {\n            maxWidth: '20vw'\n        }\n    },\n    btn: {\n        margin: '5px',\n    },\n    eps: {\n        margin: '20px',\n        padding: '50px',\n        boxShadow: '5px 5px 25px rgba(0,0,0,1)'\n    },\n    link: {\n        textDecoration: 'none'\n    },\n    bookmark: {\n        marginBottom: '20px'\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}))\n\nfunction Details() {\n    const classes = useStyles()\n    \n    const [loading, setLoading] = useState(true)\n    const [ep, setEp] = useState(0)\n\n    // this load is for back drop state\n    const [load, setLoad] = useState(false)\n    const [success, setSuccess] = useState(false)\n\n    const location = useLocation()\n    const history = useHistory()\n\n    const id = location.pathname.split(\"/\")[2]\n\n    // to get the anime id that's why its here\n    const [details, setDetails] = useState([\n        {\n            _id: localStorage.getItem('_id'),\n            animeid: id,\n            anime: {}\n        }\n    ])\n\n    const dispatch = useDispatch()\n    const state = useSelector( state => state.title)\n    \n    let rooturl = \"https://simplesenhaibookmark.herokuapp.com/api/details/\"\n    let url = rooturl + id\n\n    useEffect( () => {\n        axios.get(url)\n        .then( res => {\n            // console.log(res)\n            setDetails({ ...details, anime: res.data.results})\n            setLoading(false)\n            var eps = Number(res.data.results.map( ep => ep.totalepisode));\n            setEp(eps)\n        })\n        .catch( err => {\n            // console.log(err.response.status)\n            if(err.response.status >= 400) history.push('/error')\n        })\n    }, [url, history])\n\n    const epList = () => {\n        let L = [];\n        for (var i = ep, k = 0; i >= 1; i--, k++) {\n          L[k] = i;\n        }\n        return L;\n      };\n\n    //this handles the alert from snackbar\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSuccess(false);\n    };\n\n    const addToBookmark = (e) => {\n        setLoad(true)\n        e.preventDefault()\n        // console.log(details)\n        if(localStorage.getItem('token') === null) {\n            setTimeout( () => {\n                setLoad(false)\n                setSuccess(true)\n            }, 2000)\n        } else {\n            axios.put('https://simplesenhaibookmark.herokuapp.com/bookmark', details)\n            .then( res => {\n                console.log(res)\n                setSuccess(true)\n                setLoad(false)\n            })\n            .catch( err => console.log(err))\n        }\n        \n    }\n\n    return loading ? <Loading /> : (\n        <Paper square className={classes.root}>\n          {details.anime.map( detail => (\n              <Grid container key={detail.title}>\n                    <Grid item xs={12} sm={6}>\n                        <Paper className={classes.eps}>\n                            <img className={classes.img} src={detail.image} alt='' />\n                            <Typography variant='h6'>\n                                {detail.title}\n                            </Typography>   \n                            <Typography className={classes.title}>\n                                Status: {detail.status}\n                            </Typography>\n                            <form method=\"POST\" onSubmit={addToBookmark} >\n                                <Button type='submit' className={classes.bookmark} variant='contained' color='primary' >Add To Bookmark</Button>\n                            </form>\n                            <Typography>\n                                {detail.summary}\n                            </Typography>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12} sm={5} >\n                        <Paper className={classes.eps}>\n                            <Typography className={classes.title} variant='h6' align=\"center\">Episode List</Typography>\n                            {epList().map( (ep,index) => (\n                                <Link to={\"/watching/\" + location.pathname.split(\"/\")[2] + \"/\" + ep} className={classes.link} key={index}>\n                                    <Button \n                                        className={classes.btn} \n                                        variant='outlined' \n                                        key={index}\n                                        onClick={ () => dispatch(watchEpisode(ep,state,detail.title))}\n                                    >\n                                        Episode: {ep}\n                                    </Button>\n                                </Link>\n                            ))}\n                        </Paper>\n                    </Grid>\n\n              </Grid>\n          ))}  \n        <Backdrop className={classes.backdrop} open={load}>\n            <CircularProgress color=\"primary\" />\n        </Backdrop>\n        <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n            {localStorage.getItem('token') === null ?\n                <Alert onClose={handleClose} severity=\"error\" elevation={6} variant=\"filled\" >\n                    Please Login First \n                </Alert>\n                : \n                <Alert onClose={handleClose} severity=\"success\" elevation={6} variant=\"filled\" >\n                    Added To Bookmark   \n                </Alert>\n            }\n            \n        </Snackbar>\n        \n        </Paper>\n    )\n}\n\nexport default Details","D:\\React\\Projects\\senhai\\src\\views\\Header.js",["157"],"D:\\React\\Projects\\senhai\\src\\views\\Container.js",[],"D:\\React\\Projects\\senhai\\src\\views\\Watch.js",["158","159","160","161","162","163"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Box, Button, Container, FormControl, FormControlLabel, InputLabel, makeStyles, MenuItem, Paper, Select, Switch, Typography } from '@material-ui/core'\nimport Loading from '../components/Loading'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\n\nconst useStyles = makeStyles( (theme) => ({\n    root: {\n        height: '110vh'\n        // height: 'auto'\n    },\n    title: {\n        padding: '20px',\n        textTransform: 'uppercase'\n    },\n    p: {\n        // paddingBottom: '5px',\n        // width: '50%'\n    },\n    btn: {\n        margin: '10px',\n        padding: '10px'\n    },\n    videoContainer: {\n        position: 'relative',\n        paddingBottom: '50%', \n        height: '0', \n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            paddingBottom: '35%'\n        }\n    },\n    iframeContainer: {\n        position: 'relative',\n        // paddingBottom: '75%', \n        minHeight: '260px', \n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            paddingBottom: '35%',\n            minHeight: '0'\n        }\n    },\n    video: {\n        position: 'absolute', \n        top: '0', \n        left: '50%', \n        right: '50%', \n        width: '80%', \n        height: '100%',\n        transform: 'translate(-50%)', \n        outline: 'none',\n        [theme.breakpoints.up('sm')]: {\n            width: '60%'\n        }\n    },\n    link: {\n        textDecoration: 'none',  \n    },\n    linkDisabled: {\n        textDecoration: 'none', \n        pointerEvents: 'none'\n    },\n    box: {\n        // maxHeight: '100vh'\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    epnav: {\n        marginBottom: theme.spacing(2)\n    }\n}))\n\n\nfunction Watch() {\n    const classes = useStyles()\n    const [dl, setDl] = useState( { epdl: {}} )\n    const [links, setLinks] = useState()\n    const [cdn, setCdn] = useState('')\n    const [vdLink, setVdLink] = useState('')\n    const [quality, setQuality] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [checked, setChecked] = useState(false)\n    // const [xtream, setXtream] = useState()\n\n    const location = useLocation()\n    const history = useHistory()   \n\n    let path = location.pathname.split('/') \n    let currentEp = Number(path[3])\n    const id = path[2]\n\n    // const state = useSelector( state => state)\n    // const dispatch = useDispatch()\n    // url for getting xtreamcdn get id from params https://fcdn.stream/api/source/gqj0db-e41x7q8-\n\n    const rootUrl = \"https://simplesenhaibookmark.herokuapp.com/api/watching/\"\n    var url = rootUrl + id +\"/\" + currentEp\n    \n    useEffect( () => {\n        let unmount = false\n        axios.get(url)\n        .then( res => {\n            if(!unmount) {\n                console.log(res)\n                setVdLink(res.data.link)//vidstream url\n                setLinks(res.data.links)\n                setCdn(res.data.cdn)\n                setQuality(res.data.links[0].link)\n                setLoading(false)\n                var epLinks = []\n                \n                for (var i = 0; i < res.data.links.length; i++){\n                    let a = res.data.links[i].link.split('?')\n                    let b = a[0].split('/')\n                    b[5] === undefined ? epLinks.push('original') : epLinks.push(b[5])\n                    // epLinks.push(b[5])\n                }\n                setDl({epdl: epLinks})\n            }\n        })\n        .catch(err => {\n            if(err.response.status !== 200) history.push('/details/' + id)\n        })\n        // axios.post('https://senhai-cors.herokuapp.com/https://fcdn.stream/api/source/gqj0db-e41x7q8-')\n        // .then(res => {\n        //     // console.log(res)\n        //     setXtream(res.data.data)\n        // })\n        // .catch(err => console.log(err))\n\n        return () => unmount = true\n\n    }, [url, history, currentEp, id])\n\n    // console.log(cdn)\n    let title = id.split('-').join(' ')\n    let a = 'https://fcdn.stream/f/qy6j0se8e0-x1re'.split('.')\n    let b = a[1].replace('f','v')\n    let c = a + b\n    console.log('https://fcdn.'+b)\n    return loading ? <Loading /> : (\n        <Paper square className={classes.root}>\n            {/* {console.log(xtream.map( i => i.file)[0])} */}\n            <Paper className={classes.p} square elevation={0}>\n                <Container maxWidth='sm'>\n                    <Typography className={classes.title} variant='h5'>{title}</Typography>\n                    <Typography variant='h6'>\n                        Episode: {currentEp}\n                    </Typography>\n                </Container>\n                \n                <Paper square className={classes.p} elevation={0}>\n                    <Container maxWidth='md' className={classes.box}>\n                        {/* <FormControlLabel \n                            control={<Switch checked={checked} onChange={ () => setChecked(!checked)} />}\n                            label='VidStream'\n                            labelPlacement='bottom'\n                        />\n             */}\n                        <FormControl style={{marginLeft: '20px'}} >\n                            <InputLabel>Quality</InputLabel>\n                            <Select value={quality} onChange={ (e) => setQuality(e.target.value)} >\n                                {links.map( (i,index) => (\n                                    <MenuItem value={i.link} href={i.link} variant='outlined' download className={classes.btn} key={index}>\n                                        {i.name.replace(\"(\",\"\").replace(\")\",\"\")}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n\n                        <Box>\n                            <Button component={Link} to={`/details/${id}`} className={classes.btn}>\n                                Episode List\n                            </Button>\n                        </Box>\n                    </Container>\n                </Paper>\n\n                <Paper square elevation={0} >     \n\n                    {/* <video src={quality} controls className={classes.video}/> */}\n\n                    <Box className={ !checked ? classes.videoContainer : classes.iframeContainer}>\n                        { !checked ? \n                            <video src={quality} controls className={classes.video} /> \n                            :  \n                            <iframe \n                                src={vdLink}\n                                title='vidstream'\n                                frameBorder='0'\n                                marginWidth='0'\n                                marginHeight='0'\n                                scrolling='no'\n                                allowFullScreen\n                                className={classes.video} \n                            // style={{position: 'absolute', top: '0', left: '50%', right: '50%', width: '60%', height: '100%',\n                            //         transform: 'translate(-50%)'\n                            //     }}\n                            />    \n                        }\n\n                        {/* <video src={quality} controls className={classes.video} /> */}\n                        {/* <iframe \n                            src='//gogo-play.net/streaming.php?id=MTUwNTc3&title=Ore+dake+Haireru+Kakushi+Dungeon+Episode+2'\n                            frameBorder='0'\n                            marginWidth='0'\n                            marginHeight='0'\n                            scrolling='no'\n                            allowFullScreen\n                            style={{position: 'absolute', top: '0', left: '50%', right: '50%', width: '60%', height: '100%',\n                                    transform: 'translate(-50%)'\n                                }}\n                        /> */}\n                        \n                    </Box>\n\n                    <Box className={classes.epnav}>\n                        <span>\n                            <Link to={'/watching/' + id + '/' + (currentEp-1)} className={currentEp === 1 ? classes.linkDisabled : classes.link}>\n                                <Button variant='outlined' className={classes.btn} disabled={currentEp === 1 ? true : false}>\n                                    Previous\n                                </Button>\n                            </Link>\n                        </span>\n                        <span>\n                            <Link to={'/watching/' + id + '/' + (currentEp+1)} className={classes.link}>\n                                <Button variant='outlined' className={classes.btn}>\n                                    Next\n                                </Button>\n                            </Link>\n                        </span>\n                    </Box>\n                </Paper>\n\n                <Paper square elevation={0}>   \n                    <Typography>\n                        Download Links \n                    </Typography>\n                    {/* <Button href='https://fvs.io/redirector?token=U3p3eXVkZWRadHBRKzRqRTNBWk4veHpmejkyZVlCbjluZzdBZnc5WUJmNVJWMkUwRWx1UC8wblY0UVpIclYzWW45L1ZQd3lBMTZNL3BRZVhIUThzbllrWkVIdXNSTzZ6REtMU09WNTFUbTFobTUzQ0J2R0FiYnNYUWxQSCs0dXFQUmNDbTZEVVc1aU5wWmdta0NWdERUWGJpeHJCQVlwZWhYbz06c2lXREFSbFJmTkU3ZlRaMitSVGxNQT09' variant='contained' download className={classes.btn} >Xtreamcdn</Button> */}\n                    {links.map( (i,index) => (\n                        <Button href={i.link} variant='outlined' download className={classes.btn} key={index}>\n                            {i.name.replace(/ ([^)]) */g, \".\").replace(\"(\",\"\").replace(\")\",\"\")}\n                        </Button>\n                    ))}\n                </Paper>\n            </Paper>\n        </Paper>\n    )\n}\n\nexport default Watch","D:\\React\\Projects\\senhai\\src\\redux\\action.js",[],"D:\\React\\Projects\\senhai\\src\\components\\Loading.js",["164","165"],"import { Box, Paper, Typography } from '@material-ui/core'\nimport React from 'react'\n\nfunction Loading() {\n    // https://i.imgur.com/pMXIhUb.gif\n    // https://danbooru.donmai.us/data/5c61af14520fd187799027fe9207c848.gif\n    return(\n        <Box>\n            <h1>Loading...</h1>\n            {/* <img style={{height: '300px', width: 'auto'}} src='https://i.imgur.com/pMXIhUb.gif' alt='' /> */}\n        </Box>\n    )\n}\n\nexport default Loading","D:\\React\\Projects\\senhai\\src\\components\\Error.js",[],"D:\\React\\Projects\\senhai\\src\\components\\NoneFound.js",[],"D:\\React\\Projects\\senhai\\src\\views\\Home.js",["166","167","168"],"D:\\React\\Projects\\senhai\\src\\components\\Featured.js",["169","170","171","172","173"],"import React, { useEffect, useState } from 'react'\r\nimport jikan from 'jikanjs'\r\nimport { Box, Button, makeStyles, Typography } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from './Loading'\r\nimport { useDispatch } from 'react-redux'\r\nimport { playing, searchAnime } from '../redux/action'\r\nimport { OpVideo } from './OpVideo'\r\n\r\nfunction Featured( { page, id, image, index } ) {\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        root: {\r\n            height: 'auto',\r\n            paddingBottom: '10px',\r\n            backgroundColor: '#303030'\r\n        },\r\n        title: {\r\n            padding: '30px'\r\n        },\r\n        featureContainer: {\r\n            height: '100%',\r\n            padding: '30px',\r\n            // width: '100%'\r\n        },\r\n        featuredTitle: {\r\n            // paddingTop: '30px',\r\n            // paddingLeft: '30px',\r\n            marginBottom: '10px'\r\n        },\r\n        status: {\r\n            // marginBottom: '20px',\r\n            paddingTop: '5px',\r\n            // marginLeft: '30px'\r\n        },\r\n        genre: {\r\n            // paddingLeft: '30px'\r\n        },\r\n        mobileContainer: {\r\n            [theme.breakpoints.down('sm')]: {\r\n                display: 'none'\r\n            }\r\n        },\r\n        details: {\r\n            float: 'left',\r\n            textAlign: 'left',\r\n            width: '40%',\r\n            [theme.breakpoints.down('xs')]: {\r\n                float: 'none',\r\n                textAlign: 'center',\r\n                width: '100%',\r\n            }\r\n        },\r\n        trailer: {\r\n            float: 'right',\r\n            outline: 'none',\r\n            width: '50%',\r\n            height: '80%',\r\n            [theme.breakpoints.down('xs')]: {\r\n                display: 'none'\r\n            }\r\n        },\r\n    \r\n        topSeasonPaper: {\r\n            margin: '20px',\r\n            padding: '20px',\r\n            \r\n        },\r\n        img: {\r\n            width: '50%',\r\n            objectFit: 'cover',\r\n            height: '300%'\r\n        },\r\n        featuredImg: {\r\n            height: '500px',\r\n            width: '100%',\r\n            background: 'rgba(0, 0, 0, .65) url(' + image + ')',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            backgroundBlendMode: 'darken',\r\n            [theme.breakpoints.down('xs')]: {\r\n                height: '350px'\r\n            }\r\n        },\r\n        btnContainer: {\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            justifyContent: 'space-evenly'\r\n        },\r\n        btnWatch: {\r\n            marginTop: '20px',\r\n            padding: '10px',\r\n        },\r\n        link: {\r\n            textDecoration: 'none'\r\n        }\r\n    }))\r\n\r\n    //https://media.kitsu.io/anime/poster_images/43545/original.jpg?1609224996\r\n    // console.log(window.innerWidth)\r\n    const classes = useStyles()\r\n    const [trailer, setTrailer] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [jap, setJap] = useState('')\r\n    const [play, setPlay] = useState(false)\r\n    const [op, setOp] = useState('')\r\n    const [ed, setEd] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect( () => {\r\n        let unmount = false\r\n        jikan.loadAnime(id)\r\n        .then( res => {\r\n            if (!unmount) {\r\n            // console.log(res)\r\n            setTrailer(res.trailer_url)\r\n            setStatus(res.status)\r\n            setJap(res.title_japanese)\r\n            setOp(res.opening_themes)\r\n            setEd(res.ending_themes)\r\n            setLoading(false)\r\n            }\r\n        })\r\n        .catch( res => console.log(res))\r\n        return () => unmount = true\r\n    }, [id])\r\n\r\n    // console.log(trailer.split('=').slice(0,3).join('=') + '=0') to disable auto play when load\r\n    // console.log(trailer)\r\n    const dispatch = useDispatch()\r\n\r\n    // const handlePlay = () => {\r\n    //     setPlay(true)\r\n    //     dispatch(playing(play))\r\n    // }\r\n\r\n    return loading ? <Loading /> : (\r\n        <Box className={classes.featuredImg}>\r\n            <Box className={classes.featureContainer}>\r\n                <Box className={classes.details}>\r\n                    <Typography variant={ window.innerWidth < 600 ? 'h5' : 'h4'} className={classes.featuredTitle}>\r\n                        {page[index].title}\r\n                    </Typography>\r\n\r\n                    <Box className={classes.mobileContainer}>\r\n                        <Typography variant='subtitle2'>\r\n                            Japanese: {jap}\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Typography component='span' variant={ window.innerWidth < 600 ? 'subtitle1' : 'body1'} className={classes.genre}>\r\n                        Genre: {page[index].genres.map( (i,index) => (<span key={index}>{i.name} </span>))}\r\n                    </Typography>\r\n                    <Typography variant={ window.innerWidth < 600 ? 'subtitle1' : 'body1'} className={classes.status}>\r\n                        Status: {status}\r\n                    </Typography>\r\n\r\n                    <Box className={classes.mobileContainer}>\r\n                        <Typography variant={ window.innerWidth < 600 ? 'subtitle1' : 'body1'}>\r\n                            Opening Song: {op}\r\n                        </Typography>\r\n                        <Typography variant={ window.innerWidth < 600 ? 'subtitle1' : 'body1'}>\r\n                            Ending Song: {ed}\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box className={classes.btnContainer}>\r\n                        <Button variant='outlined' className={classes.btnWatch}>\r\n                            Trailer\r\n                        </Button>\r\n\r\n                        <Link to={'/search/' + page[index].title.replace(/[^a-zA-Z0-9]/g, ' ').split(' ').filter( e => e.trim() ).join(' ')} onClick={ () => dispatch(searchAnime(page[index].title.replace(/[^a-zA-Z0-9]/g, ' ').split(' ').filter( e => e.trim() ).join(' ')))} className={classes.link}>\r\n                            <Button variant='outlined' className={classes.btnWatch}>\r\n                                Watch Now\r\n                            </Button>\r\n                        </Link>\r\n        \r\n                    </Box>\r\n                </Box>\r\n\r\n                <Box className={classes.trailer}>\r\n                    {/* <OpVideo id={id} /> */}\r\n                {/* <iframe src={trailer.split('=').slice(0,3).join('=') + '=0'}  frameBorder='0' className={classes.trailer} onClick={ () => console.log('playing')}/> */}\r\n\r\n                    {/* <ReactPlayer \r\n                        url={trailer.split('=').slice(0,3).join('=') + '=0'}\r\n                        controls\r\n                        // playing={ () => setPlay(!play)}\r\n                        onPlay={handlePlay}\r\n                        height='100%'\r\n                    /> */}\r\n                    {/* <OpSong id={id} /> */}\r\n                    {/* <video \r\n                        src='https://animethemes.moe/video/ShingekiNoKyojinS4-OP1.webm' \r\n                        controls \r\n                        width='100%'\r\n                        height='auto'\r\n                    /> */}\r\n\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n        \r\n    )\r\n}\r\n\r\nexport default Featured","D:\\React\\Projects\\senhai\\src\\manga\\MangadexApi.js",["174","175"],"import { Paper, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { loading } from '../redux/action'\r\nimport Read from './Read'\r\n\r\nfunction MangadexApi() {\r\n    const [manga, setManga] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    //https://mangadex.org/api/manga/59849/\r\n    //https://mangadex.org/api/chapter/1084106/\r\n    //https://api.mangadex.org/v2/manga/48044\r\n    //https://mangadex-api.nedpals.xyz/\r\n    ///user/2410839 user/2410839/nitsuga01\r\n    //title/:id/:title/chapters/:page\r\n    useEffect( () => {\r\n        axios.get('https://cors-anywhere.herokuapp.com/https://mangadex-api.nedpals.xyz/updates/1')\r\n        .then( res => {\r\n            console.log(res)\r\n            setManga(res.data.results)\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n    // console.log(manga)\r\n    return loading ? \"\" : (\r\n        <div>\r\n            {/* <img src='https://zm3qh490hveht.xnvda7fch4zhr.mangadex.network/data/ec0669f8bba09e5397f16c093f92b665/2-0d24b77468e2538b035604198867fc718af1e2268775b30256c8fc636c55e794.png' alt='' /> */}\r\n            {/* <Read /> */}\r\n            {manga.map( (i,index) => (\r\n                <Paper square key={index} >\r\n                    <img src={i.cover_image} alt='' />\r\n                    <Typography>\r\n                        {i.title}\r\n                    </Typography>\r\n                </Paper>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MangadexApi",["176","177"],"D:\\React\\Projects\\senhai\\src\\manga\\Read.js",["178","179","180","181"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Read() {\r\n    const [page, setPage] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    //https://mangadex.org/api/list/26048/\r\n    //https://www2.kickassanime.rs/search?q=yuru'\r\n\r\n    useEffect( () => {\r\n        axios.request('https://cors-anywhere.herokuapp.com/https://ww.4anime.vip/')\r\n        .then(res => {\r\n            console.log(res)\r\n            // setPage(res.data.page_array)\r\n            \r\n        })\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <div>\r\n            {/* <img src='https://mangadex.org/data/81983feb6551e435238c0179ac718ed5/1-24c7ae7c0d1f5b31567958d3b24957bcd58fba27f5f11bcaf86c2f9f4d9c6c38.jpg' alt='' /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Read","D:\\React\\Projects\\senhai\\src\\components\\Schedule.js",["182"],"import { Box, makeStyles, Paper, Typography } from '@material-ui/core'\r\nimport jikan from 'jikanjs'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { SchedList } from './SchedList'\r\n\r\nconst useStyles = makeStyles( (theme) => ({\r\n    root: {\r\n        margin: '20px',\r\n        // margin: 'auto',\r\n        padding: '10px',\r\n        width: '90%',\r\n        [theme.breakpoints.down('xs')]:{\r\n            margin: 'auto',\r\n            width: '90%',\r\n        }\r\n    },\r\n    title: {\r\n        marginTop: '3px',\r\n        marginBottom: '3px'\r\n    }\r\n}))\r\n\r\nfunction Schedule() {\r\n    const classes = useStyles()\r\n\r\n    const Monday = () => {\r\n        const [list, setList] = useState([])\r\n        useEffect( () => {\r\n            let unmount = false\r\n            jikan.loadSchedule('monday')\r\n                .then( res => !unmount ? setList(res.monday) : null )\r\n                .catch( err => console.log(err))\r\n            \r\n            return () => unmount = true\r\n        }, [])\r\n\r\n        return(\r\n            <div>\r\n                <Typography variant='h6' align='left' className={classes.title}>\r\n                    Monday\r\n                </Typography>\r\n                <SchedList list={list} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Tuesday = () => {\r\n        const [list, setList] = useState([])\r\n        useEffect( () => {\r\n            let unmount = false\r\n            jikan.loadSchedule('tuesday')\r\n                .then( res => !unmount ? setList(res.tuesday) : null )\r\n                .catch( err => console.log(err))\r\n\r\n            return () => unmount = true\r\n        }, [])\r\n        return(\r\n            <div>\r\n                <Typography variant='h6' align='left' className={classes.title}>\r\n                    Tuesday\r\n                </Typography>\r\n                <SchedList list={list} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Wednesday = () => {\r\n        const [list, setList] = useState([])\r\n        useEffect( () => {\r\n            let unmount = false\r\n            jikan.loadSchedule('wednesday')\r\n                .then( res => !unmount ? setList(res.wednesday) : null )\r\n                .catch( err => console.log(err))\r\n\r\n            return () => unmount = true\r\n        }, [])\r\n        return(\r\n            <div>\r\n                <Typography variant='h6' align='left' className={classes.title}>\r\n                    Wednesday\r\n                </Typography>\r\n                <SchedList list={list} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Thursday = () => {\r\n        const [list, setList] = useState([])\r\n        useEffect( () => {\r\n            let unmount = false\r\n            jikan.loadSchedule('thursday')\r\n                .then( res => !unmount ? setList(res.thursday) : null )\r\n                .catch( err => console.log(err))\r\n\r\n            return () => unmount = true\r\n        }, [])\r\n        return(\r\n            <div>\r\n                <Typography variant='h6' align='left' className={classes.title}>\r\n                    Thursday\r\n                </Typography>\r\n                <SchedList list={list} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Friday = () => {\r\n        const [list, setList] = useState([])\r\n        useEffect( () => {\r\n            let unmount = false\r\n            jikan.loadSchedule('friday')\r\n                .then( res => !unmount ? setList(res.friday) : null )\r\n                .catch( err => console.log(err))\r\n\r\n            return () => unmount = true\r\n        }, [])\r\n        return(\r\n            <div>\r\n                <Typography variant='h6' align='left' className={classes.title}>\r\n                    Friday\r\n                </Typography>\r\n                <SchedList list={list} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Saturday = () => {\r\n        const [list, setList] = useState([])\r\n        useEffect( () => {\r\n            let unmount = false\r\n            jikan.loadSchedule('saturday')\r\n                .then( res => !unmount ? setList(res.saturday) : null )\r\n                .catch( err => console.log(err))\r\n\r\n            return () => unmount = true\r\n        }, [])\r\n        return(\r\n            <div>\r\n                <Typography variant='h6' align='left' className={classes.title}>\r\n                    Saturday\r\n                </Typography>\r\n                <SchedList list={list} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Sunday = () => {\r\n        const [list, setList] = useState([])\r\n        useEffect( () => {\r\n            let unmount = false\r\n            jikan.loadSchedule('sunday')\r\n                .then( res => !unmount ? setList(res.sunday) : null )\r\n                .catch( err => console.log(err))\r\n\r\n            return () => unmount = true\r\n        }, [])\r\n        return(\r\n            <div>\r\n                <Typography variant='h6' align='left' className={classes.title}>\r\n                    Sunday\r\n                </Typography>\r\n                <SchedList list={list} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <Paper className={classes.root}>\r\n            <Monday />\r\n            <Tuesday />\r\n            <Wednesday />\r\n            <Thursday />\r\n            <Friday />      \r\n            <Saturday />\r\n            <Sunday />\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Schedule","D:\\React\\Projects\\senhai\\src\\components\\SchedList.js",["183"],"import { Box, makeStyles, Typography } from \"@material-ui/core\"\r\nimport { GetTime } from \"./GetTime\"\r\n\r\nconst useStyles = makeStyles( () => ({\r\n    title: {\r\n        opacity: '80%',\r\n        width:'100%'\r\n    },\r\n    dayTitle: {\r\n        marginTop: '3px',\r\n        marginBottom: '3px'\r\n    },\r\n    time: {\r\n        opacity: '80%',\r\n        width: '100px'\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-betwween'\r\n    },\r\n    time: {\r\n        opacity: '80%',\r\n        width: '100px',\r\n        textOverflow: 'clip'\r\n    },\r\n}))\r\n\r\nexport const SchedList = ( { list } ) => {\r\n    const classes = useStyles()\r\n    \r\n    return(\r\n        <>\r\n            <Box width='100%'>\r\n                {list.map( (sched, index) => ( \r\n                    <Box key={index} >\r\n                        <Box width='100%' className={classes.container}>\r\n                            <Typography variant='body2' noWrap align='left' className={classes.title} >\r\n                                {sched.title}\r\n                            </Typography>\r\n                            <GetTime aired={sched.airing_start} style={classes.time} align={'right'} />\r\n                        </Box>\r\n                    </Box>\r\n                ))}\r\n            </Box>\r\n        </>\r\n    )\r\n}","D:\\React\\Projects\\senhai\\src\\components\\OpVideo.js",["184","185"],"import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nexport const OpVideo = ( { id }) =>{\r\n    const [op, setOp] = useState('')\r\n    const url = 'https://anusic-api.herokuapp.com/api/v1/anime/' + id\r\n\r\n    useEffect( () => {\r\n        let unmount = false\r\n        axios.get(url)\r\n        .then( res => {\r\n            if(!unmount) {\r\n                console.log(res.data)\r\n            }\r\n        })\r\n        .catch( err => console.log(err))\r\n    }, [url])\r\n    \r\n    return(\r\n        <div>\r\n            asd\r\n        </div>\r\n    )\r\n}","D:\\React\\Projects\\senhai\\src\\components\\GetTime.js",[],"D:\\React\\Projects\\senhai\\src\\views\\desktop\\OngoingCarousel.js",["186","187","188","189"],"import { Box, Card, CardActionArea, CardContent, CardMedia, Grid, IconButton, makeStyles, Typography } from '@material-ui/core'\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore'\r\nimport 'react-alice-carousel/lib/alice-carousel.css'\r\nimport './carousel.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport AliceCarousel from 'react-alice-carousel'\r\n\r\nconst useStyles= makeStyles( () => ({\r\n    root: {\r\n        position: 'relative', \r\n        textAlign: 'right'\r\n    },\r\n    seasonalList: {\r\n        maxWidth: 200,\r\n        maxHeight: 400,\r\n        boxShadow: '5px 5px 25px #212121',\r\n    },\r\n    seasonalListImg: {\r\n        height: '270px',\r\n        backgroundColor: '#121212'\r\n\r\n    },\r\n    btnContainer: {\r\n        textAlign: 'right',\r\n        height: '70px'\r\n    }\r\n}))\r\n\r\nfunction OngoingCarousel( { page, res } ) {\r\n    const classes = useStyles()\r\n    const [imgLoad, setImgLoad] = useState(true)\r\n\r\n    return(\r\n        <Box className={classes.root} >\r\n            <Box alignItems='center' className={classes.btnContainer} >\r\n                {/* this is container for carousel arrows overrided from carousel.css */}\r\n            </Box>\r\n            \r\n            <AliceCarousel \r\n                mouseTracking\r\n                items={page.map( i => (\r\n                    <Grid align='center'>\r\n                        <Card className={classes.seasonalList}>\r\n                            <CardActionArea \r\n                                component={Link} \r\n                                to={'/search/' + i.title.replace(/[^a-zA-Z0-9]/g, ' ').split(' ').filter( e => e.trim() ).join(' ')}\r\n                                // onClick={ () => dispatch(searchAnime(i.title.replace(/[^a-zA-Z0-9]/g, ' ').split(' ').filter( e => e.trim() ).join(' ')))}\r\n                            >\r\n                                <CardMedia \r\n                                    image={imgLoad ? 'https://media1.tenor.com/images/c184317a395883494f73b6fe8d2acf70/tenor.gif?itemid=18008963' : i.image_url}\r\n                                    component='img'\r\n                                    onLoad={ () => setImgLoad(false)}\r\n                                    className={classes.seasonalListImg}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant='inherit'>\r\n                                        {i.title}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n                responsive={res}\r\n                height='300px'  \r\n                // autoPlay\r\n                // disableButtonsControls\r\n                disableDotsControls\r\n                // autoPlayInterval='5000'\r\n                infinite\r\n                // touchTracking\r\n                // disableDotsControls={window.innerWidth < 600 ? true : false }\r\n               \r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default OngoingCarousel","D:\\React\\Projects\\senhai\\src\\views\\mobile\\OngoingGrid.js",[],"D:\\React\\Projects\\senhai\\src\\views\\mobile\\UpcomingSeason.js",[],"D:\\React\\Projects\\senhai\\src\\views\\desktop\\Upcoming.js",[],"D:\\React\\Projects\\senhai\\src\\views\\desktop\\UpcomingSkeleton.js",[],"D:\\React\\Projects\\senhai\\src\\user\\Register.js",[],"D:\\React\\Projects\\senhai\\src\\user\\Login.js",["190","191","192"],"import { Backdrop, Box, Button, Card, CardContent, CardHeader, CircularProgress, CssBaseline, FormControl, FormGroup, FormLabel, makeStyles, Paper, Snackbar, TextField, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport {Alert} from '@material-ui/lab'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles( (theme) => ({\r\n    root: {\r\n        // backgroundColor: '#303030',  \r\n        height: '100vh',\r\n        position: 'relative'\r\n    },\r\n    card: {\r\n        position: 'absolute',\r\n        width: '95%',\r\n        top: '5%',\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: '#212121',  \r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '50%'\r\n        }\r\n    },\r\n    textField: {\r\n        marginBottom: '15px'\r\n    },\r\n    cardTitle: {\r\n        textDecoration: 'underline',\r\n        marginBottom: '10px'\r\n    },\r\n    cardSubTitle: {\r\n        opacity: '85%'\r\n    },\r\n    signupBtn: {\r\n        borderRadius: '20px', \r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    },\r\n    loginBtn: {\r\n        borderRadius: '20px',\r\n        paddingLeft: '70px',\r\n        paddingRight: '70px'\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    helper: {\r\n        marginBottom: '10px'\r\n    }\r\n}))\r\n\r\nfunction Login() {\r\n    const classes = useStyles()\r\n    const [load, setLoad] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [helper, setHelper] = useState('')\r\n\r\n    const [data, setData] = useState({ \r\n        username: '',\r\n        password: ''\r\n    })\r\n    \r\n    const { username, password } = data\r\n    \r\n    const history = useHistory()\r\n\r\n    const handleChange = (e) => {\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    //this handles the alert from snackbar\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSuccess(false);\r\n    };\r\n\r\n    const submit = (e) => {\r\n        setLoad(true)\r\n        e.preventDefault()\r\n        // console.log(data)\r\n        axios.post('https://simplesenhaibookmark.herokuapp.com/login', data)\r\n        .then( res => {\r\n            // console.log(res)\r\n            if(res.data.error) setHelper(res.data.error)\r\n            if(res.data.loggedIn) {\r\n                localStorage.setItem('_id', res.data.user._id)\r\n                localStorage.setItem('token', res.data.token)\r\n                localStorage.setItem('username', res.data.user.username)\r\n                setSuccess(true)\r\n                setLoad(false)\r\n                setTimeout(() => {\r\n                    window.location.reload()\r\n                }, 100);\r\n                history.push('/')\r\n            }\r\n            setLoad(false)\r\n        })\r\n        .catch( err => console.log(err))\r\n     \r\n    }\r\n    \r\n    return (\r\n        <Paper square className={classes.root} >\r\n\r\n            <CssBaseline />\r\n            <Card className={classes.card} elevation={0} >\r\n                <CardHeader \r\n                    title={<Typography align='left' variant='h4' className={classes.cardTitle} >Log In</Typography>}\r\n                    subheader={\r\n                        <Typography align='left' variant='body2' className={classes.cardSubTitle} >\r\n                            Note: As this is site is on development your account might be deleted.\r\n                        </Typography>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <form onSubmit={submit} method=\"POST\" >\r\n                        <Typography className={classes.helper} variant='h6' >{helper}</Typography>\r\n                        <FormGroup >\r\n                            <FormControl>\r\n                                <TextField \r\n                                    required={username === '' ? true : false } \r\n                                    autoComplete=\"on\" \r\n                                    label='Username' \r\n                                    name='username' \r\n                                    variant='outlined' \r\n                                    value={username} \r\n                                    onChange={handleChange} \r\n                                    className={classes.textField} \r\n                                />\r\n                                <TextField \r\n                                    required={password === '' ? true : false } \r\n                                    autoComplete=\"on\" \r\n                                    label='Password' \r\n                                    name='password' \r\n                                    type='password' \r\n                                    variant='outlined' \r\n                                    value={password} \r\n                                    onChange={handleChange} \r\n                                    className={classes.textField} \r\n                                />      \r\n                            </FormControl>\r\n                            <Button type='submit' size='large' variant='contained' className={classes.signupBtn} color='primary' >Log In</Button>\r\n                        </FormGroup>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* this is the loading after submitting the form */}\r\n            <Backdrop className={classes.backdrop} open={load}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            \r\n            <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" elevation={6} variant=\"filled\" >\r\n                    Log In Success\r\n                </Alert>\r\n            </Snackbar>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Login","D:\\React\\Projects\\senhai\\src\\user\\Profile.js",["193"],"import { Avatar, Box, Button, Container, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, IconButton, List, ListItem, ListItemAvatar, ListItemText, makeStyles, MenuItem, Select, TextField, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from '../components/Loading'\r\nimport { EmptyBookmark } from './instructions/EmptyBookmark'\r\nimport BookmarkM from './mobile/BookmarkM'\r\n\r\nconst useStyles = makeStyles( () => ({\r\n    root: {\r\n\r\n    },\r\n    avatar: {\r\n        width: \"100px\",\r\n        height: '100px'\r\n    },\r\n    username: {\r\n        marginLeft: '5px',\r\n        textTransform: 'capitalize'\r\n    },\r\n    useremail: {\r\n        marginLeft: '7px',\r\n        opacity: 0.8\r\n    },\r\n    note: {\r\n        opacity: 0.7,\r\n        marginTop: '10px',\r\n        marginBottom: '10px'\r\n    },\r\n    reportlink: {\r\n        opacity: 1\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}))\r\n\r\nfunction Profile() {\r\n    const classes = useStyles()\r\n    const [user, setUser] = useState()\r\n    // gets the user's bookmark from fetched data\r\n    const [bookmark, setBookmark] = useState()\r\n\r\n    // the sorted bookmark that will be passed on bookmark component\r\n    const [sorted, setSorted] = useState(bookmark)\r\n\r\n    // this sets of what type of sort the user wants\r\n    const [sortBy, setSortBy] = useState('All')\r\n\r\n    const [link, setLink] = useState({\r\n        _id: localStorage.getItem('_id'),\r\n        imgLink: ''\r\n    })\r\n    // const [profileImage, setProfileImage] = useState({\r\n    //     _id: localStorage.getItem('_id'),\r\n    //     imageP: ''\r\n    // })\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    useEffect( () => {\r\n        let token = localStorage.getItem('token')\r\n        var options = {\r\n            method: 'GET',\r\n            url: 'https://simplesenhaibookmark.herokuapp.com/bookmark',\r\n            headers: {'content-type': 'application/json', authorization: `Bearer ${token}`}\r\n          };\r\n\r\n        axios.request(options)\r\n        .then( res => {\r\n            // console.log(res.data.user.bookmark)\r\n            setUser(res.data.user)\r\n            setBookmark(res.data.user.bookmark)\r\n            setSorted(res.data.user.bookmark)\r\n            setLoading(false)\r\n        })\r\n        .catch( err => console.log(err))\r\n    }, [])\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        // const fd = new FormData()\r\n        // fd.append('profileImage',profileImage)\r\n        axios.post('https://simplesenhaibookmark.herokuapp.com/changepicture', link)\r\n        .then( res => {\r\n            // console.log(res)\r\n            // console.log(link)\r\n            \r\n            window.location.reload()\r\n        })\r\n        .catch( err => console.log(err))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSortBy(e.target.value)\r\n        let ongoing = bookmark.filter( a => a.status === \"Ongoing\" )\r\n        setSorted(ongoing)\r\n        // if(sortBy === 'Ongoing' ) {\r\n        //     // bookmark.sort((a, b) => (a.title > b.title) ? 1 : -1).reverse()\r\n        //     let ongoing = bookmark.filter( a => a.status === \"Ongoing\" )\r\n        //     setSorted(ongoing)\r\n        //     console.log(ongoing)\r\n        // }\r\n        // else if (sortBy === 'Completed') {\r\n        //     let completed = bookmark.filter( a => a.status === \"Completed\" )\r\n        //     setSorted(completed)\r\n        //     // console.log( bookmark.sort((a, b) => (a.status > b.status) ? 1 : -1).filter( a => a.status === \"Completed\" ))\r\n        // } else {\r\n        //     // bookmark.filter( a => a.status === \"Ongoing\")\r\n        //     let all = bookmark.sort((a, b) => (a.title > b.title) ? 1 : -1)\r\n        //     setSorted(all)\r\n        // }\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n         setSortBy(e.target.value)\r\n        if(sortBy === 'Ongoing' ) {\r\n            // bookmark.sort((a, b) => (a.title > b.title) ? 1 : -1).reverse()\r\n            let ongoing = bookmark.filter( a => a.status === \"Ongoing\" )\r\n            setSorted(ongoing)\r\n            console.log(ongoing)\r\n        }\r\n        else if (sortBy === 'Completed') {\r\n            let completed = bookmark.filter( a => a.status === \"Completed\" )\r\n            setSorted(completed)\r\n            // console.log( bookmark.sort((a, b) => (a.status > b.status) ? 1 : -1).filter( a => a.status === \"Completed\" ))\r\n        } else {\r\n            // bookmark.filter( a => a.status === \"Ongoing\")\r\n            let all = bookmark\r\n            setSorted(all)\r\n        }\r\n        \r\n    }\r\n    console.log(sorted)\r\n    console.log(sortBy)\r\n    // const [image, setImage] = useState()\r\n\r\n    // const imagePrev = e => {\r\n    //     if(e.target.files[0]) {\r\n    //         setImage(URL.createObjectURL(e.target.files[0])); \r\n    //         setProfileImage({\r\n    //             ...profileImage,\r\n    //             imageP: URL.createObjectURL(e.target.files[0])\r\n    //         })\r\n    //     }   \r\n    //     console.log('change')\r\n    //     // console.log()\r\n    // }\r\n\r\n    return loading ? <Loading /> : (\r\n        <Container>\r\n            <List className={classes.root} >\r\n                <ListItem alignItems='flex-start' >\r\n                    <ListItemAvatar>\r\n                        <IconButton edge='start' style={{margin: 0, padding: 0}} onClick={() => setOpen(true)} >\r\n                            <Avatar className={classes.avatar} src={user.profilepicture} />\r\n                        </IconButton>\r\n                    </ListItemAvatar>\r\n                    <ListItemText \r\n                        primary={<Typography className={classes.username} variant='h6' >{user.username}</Typography>}\r\n                        secondary={<Typography className={classes.useremail} variant='body2' >{user.email}</Typography>}\r\n                    />\r\n                </ListItem>\r\n                <Typography align='left' className={classes.note} >\r\n                    You can add a picture by clicking it :)\r\n                </Typography>\r\n                <Typography align='left' className={classes.note} >\r\n                    If you got a bug or an error please report it immediately.\r\n                </Typography>\r\n                <Typography align='left' className={classes.note} >\r\n                    You can file it here {<Button color='secondary' component={Link} to='/report' size='small' variant='contained' className={classes.reportlink} >report a bug</Button>}\r\n                </Typography>\r\n            </List>\r\n            <Divider />\r\n            <Box style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}} >\r\n                <Typography variant='h5' align='left' >Bookmark</Typography>\r\n                <Box style={{display: 'flex', alignItems: 'center'}} >\r\n                    <Typography align='right' style={{marginRight: '5px'}} >Sort By </Typography>\r\n                    <Select \r\n                        value={sortBy} \r\n                        // onChange={handleChange} \r\n                        onClick={handleClick}\r\n                    >\r\n                        {['All', 'Ongoing', 'Completed'].map( (sort, index) => (\r\n                            <MenuItem value={sort} key={index} >{sort}</MenuItem>\r\n                        ) )}\r\n                        {/* <MenuItem value='a-z' > A-Z</MenuItem>\r\n                        <MenuItem value='z-a'> Z-A</MenuItem>\r\n                        <MenuItem value='status'> Status</MenuItem> */}\r\n                    </Select>\r\n                </Box>\r\n            </Box>\r\n\r\n            {/* checking if the bookmark is empty then set an instructions on how to add a bookmark */}\r\n            {user.bookmark.length === 0 ? <EmptyBookmark /> : <BookmarkM bookmark={sorted} /> }\r\n\r\n            {/* this section is only made for dialog */}\r\n            <Dialog maxWidth='md' open={open} >\r\n                <form onSubmit={submit} method=\"POST\" >\r\n                    <DialogTitle>Profile Picture</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Change your picture by pasting the link here \r\n                        </DialogContentText>\r\n                        <TextField \r\n                            margin=\"dense\"\r\n                            name=\"imgLink\"\r\n                            label=\"Image Link\"\r\n                            fullWidth\r\n                            autoComplete=\"false\"\r\n                            value={link.imgLink}\r\n                            required\r\n                            onChange={ (e) => setLink({...link, [e.target.name]: e.target.value})}\r\n                        />\r\n\r\n                        {/* <Avatar src={image} style={{width: 200, height: 200}} variant='square' />\r\n\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                Upload\r\n                            </Button>\r\n                        </label>\r\n                        <input accept=\"image/*\" className={classes.input} id=\"contained-button-file\" type=\"file\" onChange={imagePrev} /> */}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => setOpen(false)} color='default' >Cancel</Button>\r\n                        <Button onClick={() => setOpen(false)} color='default' type='submit' >Change</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\React\\Projects\\senhai\\src\\user\\Logout.js",["194","195"],"import { Backdrop, Box, CircularProgress, makeStyles, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles( (theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}))\r\n\r\nfunction Logout() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [userid, setId] = useState({\r\n        id: localStorage.getItem('_id')\r\n    })\r\n    const history = useHistory()\r\n    useEffect( () => {\r\n        axios.post('https://simplesenhaibookmark.herokuapp.com/logout', userid)\r\n        .then( res => {\r\n            // console.log(res)    \r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('_id')\r\n            localStorage.removeItem('username')\r\n            if(res.data.logout) {\r\n                setLoading(false)\r\n                setTimeout(() => {\r\n                    window.location.reload()\r\n                }, 1000);\r\n                history.push('/')\r\n            }   \r\n            // window.location.reload()\r\n        })\r\n        .catch( err => console.log(err))\r\n    }, [])\r\n\r\n    return(\r\n        <Box>\r\n            <Typography variant='h4' >Logging Out</Typography>\r\n            <Backdrop className={useStyles().backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Logout","D:\\React\\Projects\\senhai\\src\\user\\instructions\\EmptyBookmark.js",[],"D:\\React\\Projects\\senhai\\src\\user\\mobile\\BookmarkM.js",[],"D:\\React\\Projects\\senhai\\src\\user\\Report.js",["196","197","198","199"],"import { Backdrop, Box, Button, Card, CardContent, CardHeader, CircularProgress, CssBaseline, FormControl, FormGroup, FormLabel, makeStyles, Paper, Snackbar, TextField, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport {Alert} from '@material-ui/lab'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles( (theme) => ({\r\n    root: {\r\n        backgroundColor: '#303030',  \r\n        height: '100vh',\r\n        position: 'relative'\r\n    },\r\n    card: {\r\n        position: 'absolute',\r\n        width: '95%',\r\n        top: '5%',\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: '#303030',  \r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '50%'\r\n        }\r\n    },\r\n    textField: {\r\n        marginBottom: '15px'\r\n    },\r\n    cardTitle: {\r\n        marginBottom: '10px'\r\n    },\r\n    cardSubTitle: {\r\n        opacity: '85%'\r\n    },\r\n    signupBtn: {\r\n        borderRadius: '20px', \r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    },\r\n    loginBtn: {\r\n        borderRadius: '20px',\r\n        paddingLeft: '70px',\r\n        paddingRight: '70px'\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    helper: {\r\n        marginBottom: '10px'\r\n    }\r\n}))\r\n\r\nfunction Report() {\r\n    const classes = useStyles()\r\n    const [load, setLoad] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const [report, setReport] = useState({ \r\n        page: '',\r\n        description: ''\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setReport({\r\n            ...report,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    //this handles the alert from snackbar\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSuccess(false);\r\n    };\r\n\r\n    const submit = (e) => {\r\n        setLoad(true)\r\n        e.preventDefault()\r\n        console.log(report)\r\n        axios.post('https://simplesenhaibookmark.herokuapp.com/report', report)\r\n        .then( res => {\r\n            // console.log(res)\r\n            if(res.data.success) {\r\n                setSuccess(true)\r\n                setLoad(false)\r\n            }\r\n        })\r\n        .catch( err => console.log(err))\r\n     \r\n    }\r\n    \r\n    return (\r\n        <Paper square className={classes.root} >\r\n            <Card className={classes.card} elevation={0} >\r\n                <CardHeader \r\n                    title={<Typography align='left' variant='h4' className={classes.cardTitle} >Report a Bug or Error</Typography>}\r\n                    subheader={\r\n                        <Box>\r\n                            <Typography align='left' variant='body2' className={classes.cardSubTitle} >\r\n                                Note: Please be specific on how or where did the error occurs.\r\n                            </Typography>\r\n                            <Typography align='left' variant='subtitle1' >\r\n                                Define where on the page it occurs\r\n                            </Typography>\r\n                        </Box>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <form onSubmit={submit} method=\"POST\" >\r\n                        <FormGroup >\r\n                            <FormControl>\r\n                                <TextField \r\n                                    autoComplete=\"on\" \r\n                                    label='Ex. Homepage' \r\n                                    name='page' \r\n                                    variant='outlined' \r\n                                    required\r\n                                    value={report.page}\r\n                                    onChange={handleChange}\r\n                                    className={classes.textField} \r\n                                />\r\n                                <TextField \r\n                                    autoComplete=\"on\" \r\n                                    label='Description' \r\n                                    name='description'\r\n                                    variant='outlined' \r\n                                    required\r\n                                    multiline\r\n                                    rows={4}\r\n                                    value={report.description}\r\n                                    onChange={handleChange}\r\n                                    className={classes.textField} \r\n                                />      \r\n                            </FormControl>\r\n                            <Button type='submit' size='large' variant='contained' className={classes.signupBtn} color='primary' >Submit</Button>\r\n                        </FormGroup>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* this is the loading after submitting the form */}\r\n            <Backdrop className={classes.backdrop} open={load}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            \r\n            <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" elevation={6} variant=\"filled\" >\r\n                    Report Submitted\r\n                </Alert>\r\n            </Snackbar>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Report","D:\\React\\Projects\\senhai\\src\\views\\Download.js",[],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":88,"column":8,"nodeType":"206","endLine":88,"endColumn":22,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":2,"column":90,"nodeType":"210","messageId":"211","endLine":2,"endColumn":95},{"ruleId":"208","severity":1,"message":"212","line":3,"column":47,"nodeType":"210","messageId":"211","endLine":3,"endColumn":63},{"ruleId":"208","severity":1,"message":"213","line":3,"column":114,"nodeType":"210","messageId":"211","endLine":3,"endColumn":120},{"ruleId":"208","severity":1,"message":"214","line":77,"column":12,"nodeType":"210","messageId":"211","endLine":77,"endColumn":14},{"ruleId":"208","severity":1,"message":"215","line":79,"column":12,"nodeType":"210","messageId":"211","endLine":79,"endColumn":15},{"ruleId":"208","severity":1,"message":"216","line":83,"column":21,"nodeType":"210","messageId":"211","endLine":83,"endColumn":31},{"ruleId":"208","severity":1,"message":"217","line":140,"column":9,"nodeType":"210","messageId":"211","endLine":140,"endColumn":10},{"ruleId":"208","severity":1,"message":"209","line":1,"column":15,"nodeType":"210","messageId":"211","endLine":1,"endColumn":20},{"ruleId":"208","severity":1,"message":"218","line":1,"column":22,"nodeType":"210","messageId":"211","endLine":1,"endColumn":32},{"ruleId":"208","severity":1,"message":"219","line":2,"column":15,"nodeType":"210","messageId":"211","endLine":2,"endColumn":21},{"ruleId":"208","severity":1,"message":"220","line":5,"column":8,"nodeType":"210","messageId":"211","endLine":5,"endColumn":16},{"ruleId":"208","severity":1,"message":"221","line":65,"column":12,"nodeType":"210","messageId":"211","endLine":65,"endColumn":17},{"ruleId":"208","severity":1,"message":"222","line":7,"column":10,"nodeType":"210","messageId":"211","endLine":7,"endColumn":17},{"ruleId":"208","severity":1,"message":"223","line":8,"column":10,"nodeType":"210","messageId":"211","endLine":8,"endColumn":17},{"ruleId":"208","severity":1,"message":"224","line":104,"column":12,"nodeType":"210","messageId":"211","endLine":104,"endColumn":19},{"ruleId":"208","severity":1,"message":"225","line":107,"column":12,"nodeType":"210","messageId":"211","endLine":107,"endColumn":16},{"ruleId":"208","severity":1,"message":"226","line":107,"column":18,"nodeType":"210","messageId":"211","endLine":107,"endColumn":25},{"ruleId":"208","severity":1,"message":"227","line":4,"column":10,"nodeType":"210","messageId":"211","endLine":4,"endColumn":17},{"ruleId":"208","severity":1,"message":"228","line":5,"column":8,"nodeType":"210","messageId":"211","endLine":5,"endColumn":12},{"ruleId":"200","replacedBy":"229"},{"ruleId":"202","replacedBy":"230"},{"ruleId":"208","severity":1,"message":"231","line":5,"column":12,"nodeType":"210","messageId":"211","endLine":5,"endColumn":16},{"ruleId":"208","severity":1,"message":"232","line":5,"column":18,"nodeType":"210","messageId":"211","endLine":5,"endColumn":25},{"ruleId":"208","severity":1,"message":"233","line":6,"column":12,"nodeType":"210","messageId":"211","endLine":6,"endColumn":19},{"ruleId":"208","severity":1,"message":"234","line":6,"column":21,"nodeType":"210","messageId":"211","endLine":6,"endColumn":31},{"ruleId":"208","severity":1,"message":"235","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":21,"column":5,"nodeType":"238","messageId":"239","endLine":21,"endColumn":9},{"ruleId":"208","severity":1,"message":"240","line":5,"column":12,"nodeType":"210","messageId":"211","endLine":5,"endColumn":14},{"ruleId":"208","severity":1,"message":"241","line":5,"column":16,"nodeType":"210","messageId":"211","endLine":5,"endColumn":21},{"ruleId":"208","severity":1,"message":"242","line":1,"column":67,"nodeType":"210","messageId":"211","endLine":1,"endColumn":77},{"ruleId":"208","severity":1,"message":"243","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":24},{"ruleId":"208","severity":1,"message":"244","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":26},{"ruleId":"208","severity":1,"message":"245","line":6,"column":17,"nodeType":"210","messageId":"211","endLine":6,"endColumn":26},{"ruleId":"208","severity":1,"message":"235","line":1,"column":20,"nodeType":"210","messageId":"211","endLine":1,"endColumn":23},{"ruleId":"208","severity":1,"message":"246","line":1,"column":119,"nodeType":"210","messageId":"211","endLine":1,"endColumn":128},{"ruleId":"208","severity":1,"message":"245","line":3,"column":17,"nodeType":"210","messageId":"211","endLine":3,"endColumn":26},{"ruleId":"208","severity":1,"message":"247","line":95,"column":11,"nodeType":"210","messageId":"211","endLine":95,"endColumn":23},{"ruleId":"208","severity":1,"message":"248","line":15,"column":20,"nodeType":"210","messageId":"211","endLine":15,"endColumn":25},{"ruleId":"204","severity":1,"message":"249","line":36,"column":8,"nodeType":"206","endLine":36,"endColumn":10,"suggestions":"250"},{"ruleId":"208","severity":1,"message":"251","line":1,"column":82,"nodeType":"210","messageId":"211","endLine":1,"endColumn":93},{"ruleId":"208","severity":1,"message":"246","line":1,"column":119,"nodeType":"210","messageId":"211","endLine":1,"endColumn":128},{"ruleId":"208","severity":1,"message":"245","line":3,"column":17,"nodeType":"210","messageId":"211","endLine":3,"endColumn":26},{"ruleId":"208","severity":1,"message":"252","line":5,"column":10,"nodeType":"210","messageId":"211","endLine":5,"endColumn":20},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'details'. Either include it or remove the dependency array. You can also do a functional update 'setDetails(d => ...)' if you only need 'details' in the 'setDetails' call.","ArrayExpression",["255"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'dl' is assigned a value but never used.","'cdn' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'c' is assigned a value but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'Carousel' is defined but never used.","'lists' is assigned a value but never used.","'playing' is defined but never used.","'OpVideo' is defined but never used.","'trailer' is assigned a value but never used.","'play' is assigned a value but never used.","'setPlay' is assigned a value but never used.","'loading' is defined but never used.","'Read' is defined but never used.",["253"],["254"],"'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Box' is defined but never used.","no-dupe-keys","Duplicate key 'time'.","ObjectExpression","unexpected","'op' is assigned a value but never used.","'setOp' is assigned a value but never used.","'IconButton' is defined but never used.","'NavigateNextIcon' is defined but never used.","'NavigateBeforeIcon' is defined but never used.","'useEffect' is defined but never used.","'FormLabel' is defined but never used.","'handleChange' is assigned a value but never used.","'setId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userid'. Either include them or remove the dependency array.",["256"],"'CssBaseline' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [url, history, details]",{"range":"261","text":"262"},"Update the dependencies array to be: [history, userid]",{"range":"263","text":"264"},[2371,2385],"[url, history, details]",[1198,1200],"[history, userid]"]